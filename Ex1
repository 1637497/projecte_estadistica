#EXERCICI 1
library(readxl)
#Carreguem les dades
salut0 <- read.csv("C:\\Users\\Usuario\\OneDrive\\Escriptori\\UAB\\3r\\Anàlisi Estadístic\\trabajo final\\Sleep_health_and_lifestyle_dataset.csv")

# Eliminem les files NA
salut0 <- na.omit(salut0)

# Seleccionar columnas específicas
# Seleccionar columnes específiques
cols <- salut0[c("Gender", "Age", "Occupation", "Sleep.Duration", "Quality.of.Sleep", "Physical.Activity.Level", "Stress.Level", "BMI.Category", "Blood.Pressure")]

# Fijar la semilla para reproducibilidad
set.seed(102)

# Seleccionar 50 filas aleatorias
valors_seed <- sample(1:nrow(cols), 50, replace = FALSE)

# Crear un nuevo DataFrame con las 50 filas seleccionadas
salut <- cols[valors_seed, ]




gender <- salut$Gender
sexe <- as.numeric(factor(gender, levels = unique(gender)))
edat <- salut$Age
ofici <- salut$Occupation
ofici<- as.numeric(factor(ofici, levels = unique(ofici)))
duracio <- salut$Sleep.Duration
activitat <- salut$Physical.Activity.Level
estress <- salut$Stress.Level
BMI <- salut$BMI.Category
BMI <- as.numeric(factor(BMI, levels = unique(BMI)))
pres <- salut$Blood.Pressure
pres <- as.numeric(factor(pres, levels = unique(pres)))
calitat <- salut$Quality.of.Sleep


#Gràfica Sexes
barplot(
  table(pinguins$sex), 
  col = c("blue", "red"), 
  main = "Distribució de Sexes", 
  xlab = "Sexe", 
  ylab = "Frequència",
  beside = TRUE,
)

#Gràfica Espècies
barplot(
  table(pinguins$species), 
  col = c("green", "red",'blue'), 
  main = "Distribució d'Espècies", 
  xlab = "Espècie", 
  ylab = "Frequència",
  beside = TRUE,
)

#Gràfica Massa
barplot(table(pinguins$body_mass_g), col = "skyblue", main = "Distribució Masses corporals", xlab = "Massa corporal", ylab = "Frequència", las = 2)

#Gràfica Aleta
barplot(table(aleta_allargada), col = "skyblue", main = "Distribució Llargades de l'aleta", xlab = "LLargada", ylab = "Frequència", las = 2)

#Gràfica Bec
barplot(table(bec_llargada), col = "skyblue", main = "Distribució Llargades del bec", xlab = "LLargada", ylab = "Frequència", las = 2)


#aleta_llargada~sexe
boxplot(aleta_llargada~sexe,
        data=smokers,
        main="aleta_llargada~sexe",
        xlab="aleta_llargada",
        ylab="sexe",
        col="yellow",
        border="black"
)

#bec_llargada~sexe
boxplot(aleta_llargada~sexe,
        data=smokers,
        main="bec_llargada~sexe",
        xlab="bec_llargada",
        ylab="sexe",
        col="yellow",
        border="black"
)


#Gràfica Illes
barplot(table(illa), col = "green", main = "Distribució d'illes", xlab = "Illa", ylab = "Frequència", las = 2)

#Correlació massa aleta
plot(massa_corporal, aleta_llargada, pch = 25, col = "green", xlab = "massa_corporal", ylab = "aleta_llargada")
abline(lm(aleta_llargada ~ massa_corporal), col = "red", lwd = 5)
legend("topleft", paste("Correlació:", round(cor(massa_corporal, aleta_llargada), 2)))

#Correlació massa bec
plot(massa_corporal, bec_llargada, pch = 25, col = "green", xlab = "massa_corporal", ylab = "aleta_llargada")
abline(lm(bec_llargada ~ massa_corporal), col = "red", lwd = 5)
legend("topleft", paste("Correlació:", round(cor(massa_corporal, bec_llargada), 2)))


#Fem el model
model <- lm(calitat~ duracio + BMI + activitat + estress)
summary(model)

#u<-matrix(1, nrow = 10, ncol = 1)
u=rep(1, times = 50)
x1=c(duracio)
x2=c(BMI)
x3=c(activitat)
x4=c(estress)
y=matrix(c(calitat),ncol=1)

X=t(rbind(u,x1,x2,x3,x4))
XTX=t(X)%*%X 


d=det(XTX)
d

iv=solve(XTX)
iv

beta=iv%*%t(X)%*%y
beta



SSE=t(y)%*%y-t(beta)%*%t(X)%*%y
SSE

SSR=t(beta)%*%t(X)%*%y -((sum(y))**2/N)
SSR

SST=SSE+SSR
SST



N=50
K=4
anova <- data.frame(
  Fv = c("REGRE", "ERROR", "TOTAL"),
  gL = c(K, N-K-1, N-1),
  SS = c(SSR, SSE, SST),
  MS = c(SSR/K,SSE/(N-K-1),NA),
  Fo = c((SSR/K)/(SSE/(N-K-1)),NA,NA)
)
anova

Fo <- anova$Fo[1]
Fo>qf(0.95,4,45)



MSE=SSE/(N-K-1)
# Función para calcular la validación individual de una variable en un modelo
val_ind <- function(model, X, MSE, variable_index) {
  # Obtén los parámetros estimados
  beta <- coef(model)
  
  # Calcula la matriz (X'X)^(-1)
  XtX_inv <- solve(crossprod(X))
  
  # Calcula la diagonal de la inversa de (X'X)
  XtX_inv_diag <- diag(XtX_inv)
  
  # Calcula el numerador de t0: beta_i
  numerator <- beta[variable_index + 1]
  
  # Calcula el denominador de t0
  denominator <- sqrt(MSE * XtX_inv_diag[variable_index + 1])
  
  # Calcula t0
  t0 <- numerator / denominator
  print(beta[variable_index + 1])
  print((t0))
  return(abs(t0))
}


resultado1_t0 <- val_ind(model, X, MSE, 1)
resultado1_t0>qt(1-0.05/2,N-K-1)
resultado2_t0 <- val_ind(model, X, MSE, 2)
resultado2_t0>qt(1-0.05/2,N-K-1)
resultado3_t0 <- val_ind(model, X, MSE, 3)
resultado3_t0>qt(1-0.05/2,N-K-1)
resultado4_t0 <- val_ind(model, X, MSE, 4)
resultado4_t0>qt(1-0.05/2,N-K-1)


#modelr <- lm(duracio~ofici + activitat + estress)
#summary(modelr)
#q=1
#k=3


#X=t(rbind(u,x2,x3,x4))
#XTX=t(X)%*%X 


#d=det(XTX)
#d

#iv=solve(XTX)
#iv

#beta=iv%*%t(X)%*%y
#beta




#SSRr=t(beta)%*%t(X)%*%y -((sum(y))**2/N)
#SSRr


#Fo=((SSR-SSRr)/q)/(SSR/(n-k-1))
#Fo>qf(0.95,1,46)
#El model no és tan bò com l'original


#Supòsits del Model

#Homocedasticitat realitzant la prova de Breusch-Pagan
bptest(model)

#p-value es 0.4516, el qual és més gran que la significació 0.05, per tant 
#no es disposa d'evidència suficient per rebutjar la hipòtesi nul·la
#d'homocedasticitat, per tant podem afirmar que la variànça dels errors és manté
#constant

#Multicol·linealitat utilitzant vif
vif(model)
#Cap de les X té un valor alt superior a 10, per tant podem confirmar
#la no Multicol·linealitat

#Matrius
mat<-vcov(model)
varianzas <- diag(mat)
cov2cor(vcov(model))

#Residuals

# Obtén los residuos
r <- residuals(model)

# Grèfica un Q-Q plot
qqnorm(r)
qqline(r)

#prediccions
pred <- predict(model, pinguins, interval = "prediction")
head(pred)
#plot(model)

#bondad d'ajust
summary(model)$r.squared
